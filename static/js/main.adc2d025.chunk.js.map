{"version":3,"sources":["components/Project.jsx","components/Projects.jsx","components/Header.jsx","components/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["Project","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","viewDescription","setState","_this2","work","react_default","a","createElement","Fragment","Row","Col","md","className","xs","onClick","handleClick","title","js_default","expanded","heightTransition","eagerRender","src","process","image","description","Component","Projects","Header","viewMore","href","Content","data","Grid","fluid","components_Header","components_Projects","workItems","map","i","components_Project","key","style","paddingTop","App","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adc2d025.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport SmoothCollapse from 'react-smooth-collapse';\n\nclass Project extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewDescription: false\n        }\n    }\n\n    handleClick() {\n        this.setState({ viewDescription: !this.state.viewDescription });\n    }\n\n    render() {\n        const { viewDescription } = this.state;\n        const { work } = this.props;\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col md={1}></Col>\n                    <Col className=\"work-heading\" xs={12} md={10}>\n                        <div className=\"work-heading-text\" onClick={() => this.handleClick()}>{work.title}</div>\n                    </Col>\n                    <Col md={1}></Col>\n                </Row>\n                <SmoothCollapse expanded={viewDescription} heightTransition=\".5s ease\" eagerRender={true}>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col xs={12} md={4}>\n                            <img className=\"work-image\" src={process.env.PUBLIC_URL + work.image} />\n                        </Col>\n                        <Col xs={12} md={4}>\n                            <div className=\"work-text\">{work.description}</div>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </SmoothCollapse>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Project;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Projects = () => {\n    return (\n        <Row>\n            <Col md={1}></Col>\n            <Col className=\"projects\" xs={12} md={10}>\n                <div><b>Projects:</b></div>\n            </Col>\n            <Col md={1}></Col>\n        </Row>\n    )\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport SmoothCollapse from 'react-smooth-collapse';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewMore: false\n        }\n    }\n\n    handleClick() {\n        this.setState({ viewMore: !this.state.viewMore });\n    }\n\n    render() {\n        const { viewMore } = this.state;\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col md={1}></Col>\n                    <Col className=\"header\" xs={12} md={10}>\n                        <div>Hello! I’m <b>Adam Campbell</b>, a <b>Full Stack Web Developer</b> from Glasgow.</div>\n                    </Col>\n                    <Col md={1}></Col>\n                </Row>\n                <SmoothCollapse expanded={!viewMore} heightTransition=\".5s ease\">\n                    <Row>\n                        <Col md={1}></Col>\n                        <Col xs={12} md={10}>\n                            <div className=\"read-more\" onClick={() => this.handleClick()}>Read More...</div>\n                        </Col>\n                        <Col md={1}></Col>\n                    </Row>\n                </SmoothCollapse>\n                <SmoothCollapse expanded={viewMore} heightTransition=\".5s ease\">\n                    <Row>\n                        <Col md={1}></Col>\n                        <Col xs={12} md={10}>\n                            <div className=\"header-description\">I currently make RESTFul web applications for <a className=\"mylink\" href=\"http://www.linn.co.uk\"><b>Linn Products</b></a> using React, Redux, .NET Core, Docker and AWS. I enjoy working creatively with code and have a background as a musician and sound artist, where I have performed internationally and had work commissioned by the bodies like the <b>Goethe Institute</b> and the <b>BBC</b>. I also have a Master’s with Merit from the <b>University of Glasgow</b> in Information Technology, where my dissertation project was a real-time 3D simulation of a haptic user interface. I'm always on the lookout for interesting projects and collaborations.</div>\n                        </Col>\n                        <Col md={1}></Col>\n                    </Row>\n                </SmoothCollapse>\n                <Row>\n                    <Col md={1}></Col>\n                    <Col className=\"header-description\" xs={12} md={10}>\n                        Please check out some descriptions of my previous work below and don’t hesitate to <a className=\"mylink\" href=\"mailto:adamtoddcampbell@gmail.com\">get in touch!</a>\n                    </Col>\n                    <Col md={1}></Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport Project from './Project';\nimport Projects from './Projects';\nimport Header from './Header';\n\nclass Content extends Component {\n    render() {\n        const data = this.props.data;\n\n        return (\n            <Grid fluid={true}>\n                <Header />\n                <Projects />\n                {data.workItems.map((work, i) => (\n                    <Project key={i} work={work} />\n                ))}\n                <Row style={{ paddingTop: '30vh' }}></Row>\n            </Grid>\n        )\n    }\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport Content from './components/Content';\nimport data from './data/data.json'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return ( \n      <div>\n        <Content data={data}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}